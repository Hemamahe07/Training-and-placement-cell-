#include <stdio.h>

// Function to merge two sorted arrays
void mergeSortedLists(int arr1[], int size1, int arr2[], int size2, int merged[]) {
    int i = 0, j = 0, k = 0;

    // Merge the two arrays
    while (i < size1 && j < size2) {
        if (arr1[i] < arr2[j]) {
            merged[k++] = arr1[i++];
        } else {
            merged[k++] = arr2[j++];
        }
    }

    // Copy any remaining elements from arr1
    while (i < size1) {
        merged[k++] = arr1[i++];
    }

    // Copy any remaining elements from arr2
    while (j < size2) {
        merged[k++] = arr2[j++];
    }
}

int main() {
    int size1, size2;

    // Input first sorted array
    printf("Enter the size of first sorted list: ");
    scanf("%d", &size1);
    int arr1[size1];
    printf("Enter %d elements in sorted order: ", size1);
    for (int i = 0; i < size1; i++) {
        scanf("%d", &arr1[i]);
    }

    // Input second sorted array
    printf("Enter the size of second sorted list: ");
    scanf("%d", &size2);
    int arr2[size2];
    printf("Enter %d elements in sorted order: ", size2);
    for (int i = 0; i < size2; i++) {
        scanf("%d", &arr2[i]);
    }

    // Merged array
    int merged[size1 + size2];

    // Merge the two sorted arrays
    mergeSortedLists(arr1, size1, arr2, size2, merged);

    // Print merged sorted array
    printf("Merged Sorted List: ");
    for (int i = 0; i < size1 + size2; i++) {
        printf("%d ", merged[i]);
    }
    printf("\n");

    return 0;
}
